version: "2.2"

# Refer to https://github.com/elastic/elasticsearch/blob/main/docs/reference/setup/install/docker/docker-compose.yml

# noinspection ComposeUnknownKeys
x-elasticsearch-image: &elasticsearch-image
  "elasticsearch:8.15.3"

# noinspection ComposeUnknownKeys
x-kibana-image: &kibana-image
  "kibana:8.15.3"

# noinspection ComposeUnknownKeys
x-elasticsearch-username: &elasticsearch-username
  "elastic"

# noinspection ComposeUnknownKeys
x-elasticsearch-password: &elasticsearch-password
  "elastic"

# noinspection ComposeUnknownKeys
x-kibana-username: &kibana-username
  "kibana_system"

# noinspection ComposeUnknownKeys
x-kibana-password: &kibana-password
  "kibana_system"

# noinspection ComposeUnknownKeys
x-ulimits: &default-ulimits
  memlock:
    soft: -1
    hard: -1

# noinspection ComposeUnknownKeys
x-elasticsearch-data-node-limits: &elasticsearch-data-node-limits
  mem_limit: "1024m"
  mem_reservation: "512m"

# noinspection ComposeUnknownKeys
x-elasticsearch-master-nodes: &elasticsearch-master-nodes
  discovery.seed_hosts: "elasticsearch1,elasticsearch2,elasticsearch3"
  cluster.initial_master_nodes: "elasticsearch1,elasticsearch2,elasticsearch3"

# noinspection ComposeUnknownKeys
x-elasticsearch-data-conf: &elasticsearch-data-conf
  <<: *elasticsearch-master-nodes
  node.roles: "[ master, data, data_hot, ingest ]"
  xpack.security.enabled: "true"
  xpack.license.self_generated.type: "trial"
  ELASTIC_PASSWORD: *elasticsearch-password

# noinspection ComposeUnknownKeys
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "12m"
    max-file: "5"

# noinspection ComposeUnknownKeys
x-elasticsearch-api-endpoint: &elasticsearch-api-endpoint
  "http://elasticsearch4:9200"

volumes:
  elasticsearch1-data:
  elasticsearch2-data:
  elasticsearch3-data:
  elasticsearch4-data:
  kibana-data:

services:
  setup:
    image: *elasticsearch-image
    command:
      - "bash"
      - "-c"
      - |-
        echo "Waiting for Elasticsearch availability" &&
        until curl -s "$${ELASTICSEARCH_API_ENDPOINT}" | grep -q "missing authentication credentials"; do sleep 30; done &&
        echo "Setting $${KIBANA_USERNAME} password" &&
        until curl -s -X POST -u "$${ELASTICSEARCH_API_USERNAME}:$${ELASTICSEARCH_API_PASSWORD}" -H "Content-Type: application/json" "$${ELASTICSEARCH_API_ENDPOINT}/_security/user/$${KIBANA_USERNAME}/_password" -d "{\"password\":\"$${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done &&
        echo "All done!"
    environment:
      ELASTICSEARCH_API_ENDPOINT: *elasticsearch-api-endpoint
      ELASTICSEARCH_API_USERNAME: *elasticsearch-username
      ELASTICSEARCH_API_PASSWORD: *elasticsearch-password
      KIBANA_USERNAME: *kibana-username
      KIBANA_PASSWORD: *kibana-password

  elasticsearch1:
    depends_on:
      setup:
        condition: "service_started"
    image: *elasticsearch-image
    <<: *elasticsearch-data-node-limits
    ulimits: *default-ulimits
    healthcheck:
      # noinspection ComposeUnknownValues
      test:
        - "CMD-SHELL"
        - "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'"
      interval: "10s"
      timeout: "10s"
      retries: 120
    environment:
      node.name: "elasticsearch1"
      <<: *elasticsearch-data-conf
    ports:
      - "9201:9200"
    volumes:
      - "elasticsearch1-data:/usr/share/elasticsearch/data"
    logging: *default-logging

  elasticsearch2:
    depends_on:
      setup:
        condition: "service_started"
    image: *elasticsearch-image
    <<: *elasticsearch-data-node-limits
    ulimits: *default-ulimits
    healthcheck:
      # noinspection ComposeUnknownValues
      test:
        - "CMD-SHELL"
        - "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'"
      interval: "10s"
      timeout: "10s"
      retries: 120
    environment:
      node.name: "elasticsearch2"
      <<: *elasticsearch-data-conf
    ports:
      - "9202:9200"
    volumes:
      - "elasticsearch2-data:/usr/share/elasticsearch/data"
    logging: *default-logging

  elasticsearch3:
    depends_on:
      setup:
        condition: "service_started"
    image: *elasticsearch-image
    <<: *elasticsearch-data-node-limits
    ulimits: *default-ulimits
    healthcheck:
      # noinspection ComposeUnknownValues
      test:
        - "CMD-SHELL"
        - "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'"
      interval: "10s"
      timeout: "10s"
      retries: 120
    environment:
      node.name: "elasticsearch3"
      <<: *elasticsearch-data-conf
    ports:
      - "9203:9200"
    volumes:
      - "elasticsearch3-data:/usr/share/elasticsearch/data"
    logging: *default-logging

  elasticsearch4:
    depends_on:
      elasticsearch1:
        condition: "service_healthy"
      elasticsearch2:
        condition: "service_healthy"
      elasticsearch3:
        condition: "service_healthy"
    image: *elasticsearch-image
    mem_limit: "1024m"
    mem_reservation: "512m"
    ulimits: *default-ulimits
    healthcheck:
      # noinspection ComposeUnknownValues
      test:
        - "CMD-SHELL"
        - "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'"
      interval: "10s"
      timeout: "10s"
      retries: 120
    environment:
      node.name: "elasticsearch4"
      <<: *elasticsearch-master-nodes
      bootstrap.memory_lock: "true"
      node.roles: "[ ]"
      xpack.security.enabled: "true"
      xpack.license.self_generated.type: "trial"
      ELASTIC_PASSWORD: *elasticsearch-password
    volumes:
      - "elasticsearch4-data:/usr/share/elasticsearch/data"
    logging: *default-logging

  kibana:
    depends_on:
      elasticsearch4:
        condition: "service_healthy"
    image: *kibana-image
    mem_limit: "1024m"
    mem_reservation: "512m"
    ulimits: *default-ulimits
    healthcheck:
      # noinspection ComposeUnknownValues
      test:
        - "CMD-SHELL"
        - "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"
      interval: "10s"
      timeout: "10s"
      retries: 120
    environment:
      SERVER_PUBLICBASEURL: "http://localhost:5601"
      ELASTICSEARCH_HOSTS: *elasticsearch-api-endpoint
      xpack.security.enabled: "true"
      ELASTICSEARCH_USERNAME: *kibana-username
      ELASTICSEARCH_PASSWORD: *kibana-password
      TELEMETRY_ENABLED: "false"
      NEWSFEED_ENABLED: "false"
    ports:
      - "5601:5601"
    volumes:
      - "kibana-data:/usr/share/kibana/data"
    logging: *default-logging
